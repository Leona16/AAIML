import cv2
import dlib
import numpy as np
import tkinter as tk
from imutils import face_utils
from threading import Thread
from scipy.spatial import distance


root = tk.Tk()
root.title("Blink-Controlled Font Size")
font_size = 20
label = tk.Label(root, text="Blink to change font size!", font=("Helvetica", font_size))
label.pack(padx=20, pady=20)

# EAR threshold and frame settings
EAR_THRESHOLD = 0.25
CONSEC_FRAMES = 3


detector = dlib.get_frontal_face_detector()
predictor = dlib.shape_predictor("shape_predictor_68_face_landmarks.dat")
(lStart, lEnd) = face_utils.FACIAL_LANDMARKS_IDXS["left_eye"]
(rStart, rEnd) = face_utils.FACIAL_LANDMARKS_IDXS["right_eye"]

blink_counter = 0
frames = 0

def eye_aspect_ratio(eye):
    A = distance.euclidean(eye[1], eye[5])
    B = distance.euclidean(eye[2], eye[4])
    C = distance.euclidean(eye[0], eye[3])
    return (A + B) / (2.0 * C)

def update_font():
    global font_size
    font_size += 2
    if font_size > 40:
        font_size = 20
    label.config(font=("Helvetica", font_size))

def blink_detector():
    global blink_counter, frames
    cap = cv2.VideoCapture(0)
    while True:
        ret, frame = cap.read()
        if not ret:
            break
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        rects = detector(gray, 0)

        for rect in rects:
            shape = predictor(gray, rect)
            shape = face_utils.shape_to_np(shape)

            leftEye = shape[lStart:lEnd]
            rightEye = shape[rStart:rEnd]
            leftEAR = eye_aspect_ratio(leftEye)
            rightEAR = eye_aspect_ratio(rightEye)

            ear = (leftEAR + rightEAR) / 2.0

            if ear < EAR_THRESHOLD:
                frames += 1
            else:
                if frames >= CONSEC_FRAMES:
                    blink_counter += 1
                    print(f"Blink #{blink_counter}")
                    update_font()
                frames = 0

        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cap.release()
    cv2.destroyAllWindows()

# Start detector thread and GUI loop
Thread(target=blink_detector, daemon=True).start()
root.mainloop()
